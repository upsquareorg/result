
// ==================== FIRESTORE RULES ====================
// Copy everything between these markers to your Firestore Rules in Firebase Console

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.email == 'bazi.coin.bazar@gmail.com' || 
        get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.is_admin == true);
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Profiles collection
    match /profiles/{userId} {
      // Allow read of own profile or if admin
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow users to create/update their own profile, admins can update any
      allow create: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
    }
    
    // Bets collection
    match /bets/{betId} {
      // Users can read their own bets, admin can read all
      allow read: if isAuthenticated() && 
        (resource.data.user_id == request.auth.uid || isAdmin());
      
      // Users can create bets for themselves
      allow create: if isAuthenticated() && 
        request.resource.data.user_id == request.auth.uid;
        
      // Only admin can update bets (for processing results)
      allow update: if isAdmin();
    }
    
    // Game results
    match /game_results/{resultId} {
      // Anyone can read game results
      allow read: if true;
      
      // Only admin can create/update game results
      allow create, update, delete: if isAdmin();
    }
    
    // Result backups
    match /result_backups/{backupId} {
      // Only admin can read and manage backups
      allow read, write: if isAdmin();
    }
    
    // Settings
    match /settings/{settingId} {
      // Anyone can read settings
      allow read: if true;
      
      // Only admin can update settings
      allow write: if isAdmin();
    }
  }
}

// ==================== END FIRESTORE RULES ====================


// ==================== STORAGE RULES ====================
// Copy everything between these markers to your Storage Rules in Firebase Console

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.email == 'bazi.coin.bazar@gmail.com');
    }
    
    // Reports folder - only admin can access
    match /reports/{fileName} {
      allow read, write: if isAdmin();
    }
    
    // User profile images
    match /profiles/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
    }
    
    // Default rule - deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

// ==================== END STORAGE RULES ====================
